@page
@model TwinMIME.Pages.BlogModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "–ë–ª–æ–≥ –æ AT&T —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ";
    var token = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

@section Styles {
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css">    
<style>
        .blog-section {
            padding-top: 70px; 
        }
        .katex-formula { margin: 1em 0; text-align: center; }

        .language-python {
            display: block;
            background: #e3e1f8ff;   
            color: #000000ff;           
            padding: 12px;         
            border-radius: 30px;   
            font-size: 18px;       
            line-height: 1.5;
            overflow-x: auto;      
        }
        .math {
            background: #ffffffff;
            padding: 10px 15px;
            margin: 20px 0;
            border-radius: 6px;
        }
    </style>
}

<nav class="navbar">
    <div class="nav-container">
        <div class="nav-logo">
            <a href="/">TwinMIME</a>
        </div>
        <div class="theme-switcher">
            <span class="theme-label">–°–≤–µ—Ç–ª–∞—è</span>
            <label class="switch">
                <input type="checkbox" id="theme-toggle">
                <span class="slider round"></span>
            </label>
            <span class="theme-label">–¢—ë–º–Ω–∞—è</span>
        </div>
        @if (User.Identity?.IsAuthenticated == true)
        {
            <div class="user-menu">
                <a href="/Account" class="nav-link">Yadro</a>
            </div>
        }
    </div>
</nav>

<input type="hidden" id="__RequestVerificationToken" name="__RequestVerificationToken" value="@token" />

<section class="blog-section">
    <div class="blog-container">
        <article class="blog-article">
            <h1>–ü—Ä–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏</h1>
            <p class="blog-date">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: 11 —Å–µ–Ω—Ç—è–±—Ä—è 2025</p>
            <div class="blog-content">
                <p>–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∞–¥—Ä–µ—Å–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏ –≤ AT&T.<br></br>

–ò–Ω–¥–µ–∫—Å–Ω–∞—è –∞–¥—Ä–µ—Å–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∞–¥—Ä–µ—Å (–∏—Ç–æ–≥–æ–≤—ã–π, –ª–∏–Ω–µ–π–Ω—ã–π –∞–¥—Ä–µ—Å), –∏—Å–ø–æ–ª—å–∑—É—è –±–∞–∑–æ–≤—ã–π –∏ –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä + —Å–º–µ—â–µ–Ω–∏–µ.<br></br>

–°–º–µ—â–µ–Ω–∏–µ, –∑–∞–¥–∞–≤–∞–µ–º–æ–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ—á–Ω–æ –∞–¥—Ä–µ—Å–æ–≤–∞—Ç—å –ø–æ–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä: –Ω–∞–ø—Ä–∏–º–µ—Ä, 8(%rbx, %rcx, 4) –≤—ã—á–∏—Å–ª—è–µ—Ç –∞–¥—Ä–µ—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∞–¥—Ä–µ—Å—É %rbx + 8 + %rcx * 4, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç—É–ø—É –∫ –º–∞—Å—Å–∏–≤—É —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª (4 –±–∞–π—Ç–∞).<br></br>
%rbx —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –∞ +8 –∑–∞–¥–∞–µ—Ç —Å–º–µ—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.<br></br>

–°–µ–≥–º–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã, –≤—Ä–æ–¥–µ %fs:0x0(%rax), –¥–æ–±–∞–≤–ª—è—é—Ç –µ—â—ë –æ–¥–∏–Ω —É—Ä–æ–≤–µ–Ω—å –∫–æ—Å–≤–µ–Ω–Ω–æ—Å—Ç–∏, –æ–±—Ä–∞—â–∞—è—Å—å –∫ –ø–∞–º—è—Ç–∏ —á–µ—Ä–µ–∑ —Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –û–° –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ TLS (Thread-Local Storage) –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º.</p>
            <div class="math">
                <p><b>–¢–µ—Å—Ç Katex –∏ Highlight.js</b></p>
                <p>
                $$
                \min_{\theta,\phi}\; \mathcal{L}(\theta,\phi)
                = \frac{1}{|\Omega|}\sum_{p\in\Omega}\mathcal{L}_{\mathrm{CE}}(u(p),y(p))
                + \lambda_{\mathrm{TV}} \,\mathcal{R}_{\mathrm{TV}}(u)
                + \lambda_{\theta}\,\|\theta\|_2^2
                + \lambda_{\phi}\,\mathcal{R}_{\phi}(\phi),
                $$
                </p>

                <ul>
                    <li>Cross-entropy:
                    $$
                    \mathcal{L}_{\mathrm{CE}}(u,y) = -\sum_{k=1}^K y_k \log u_k
                    $$
                    </li>
                    <li>Weight decay:
                    $$
                    \|\theta\|_2^2 = \sum_i \theta_i^2
                    $$
                    </li>
                    <li>Total Variation (–≥—Ä–∞–Ω–∏—Ü—ã):
                    $$
                    \mathcal{R}_{\mathrm{TV}}(u) = \frac{1}{|\Omega|}\sum_{p\in\Omega}\sum_{k=1}^K
                    \sqrt{ (\nabla_x u_k(p))^2 + (\nabla_y u_k(p))^2 + \varepsilon }
                    $$
                    </li>
                </ul>
</div>
<pre><code class="language-python">
import torch
import torch.nn.functional as F

def ce_loss(logits, target):
    return F.cross_entropy(logits, target)

def tv_loss(prob):
    dx = prob[:, :, :, 1:] - prob[:, :, :, :-1]
    dy = prob[:, :, 1:, :] - prob[:, :, :-1, :]
    return torch.mean(torch.sqrt(dx[:, :, :, :-1]**2 + dy[:, :, :-1, :]**2 + 1e-6))

def total_loss(logits, target, model, lambda_tv=1e-3, lambda_wd=1e-4):
    prob = F.softmax(logits, dim=1)
    loss = ce_loss(logits, target)
    loss += lambda_tv * tv_loss(prob)
    loss += lambda_wd * sum(torch.sum(p**2) for p in model.parameters())
    return loss

def natural_gradient_step(model, loss, lr=1e-3, damping=1e-3):
    grads = torch.autograd.grad(loss, model.parameters(), create_graph=True)
    fisher_diag = [g.detach()**2 + damping for g in grads]
    with torch.no_grad():
        for p, g, f in zip(model.parameters(), grads, fisher_diag):
            p -= lr * g / f.sqrt()
</code></pre>

    </div>
            </div>
            
            <div class="article-reactions">
                <button class="reaction-btn" onclick="rateArticle(true)">
                    <span class="emoji">üëç</span>
                    <span class="count" id="likeCount">@Model.LikeCount</span>
                </button>
                <button class="reaction-btn" onclick="rateArticle(false)">
                    <span class="emoji">üëé</span>
                    <span class="count" id="dislikeCount">@Model.DislikeCount</span>
                </button>
            </div>
        </article>

        <div class="comments-section">
            <h2>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h2>
            
            @if (User.Identity?.IsAuthenticated == true)
            {
                <form class="comment-form" method="post" asp-page-handler="AddComment">
                    @Html.AntiForgeryToken()
                    <textarea name="commentText" placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..." required></textarea>
                    <button type="submit" class="cta-button-small">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </form>
            }
            else
            {
                <p class="auth-required">–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, <a href="/">–≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</a>.</p>
            }

            <div class="comments-list">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="comment">
                            <div class="comment-header">
                                <span class="comment-author">@comment.Author</span>
                                <span class="comment-date">@comment.CreatedDate.ToString("dd.MM.yyyy HH:mm")</span>
                            </div>
                            <div class="comment-text">
                                @comment.Text
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/contrib/auto-render.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            renderMathInElement(document.body, {
                delimiters: [
                    { left: "$$", right: "$$", display: true },
                    { left: "$", right: "$", display: false }
                ]
            });
        });

    function rateArticle(isLike) {
        if (!@(User.Identity?.IsAuthenticated == true ? "true" : "false")) {
            alert('–î–ª—è –æ—Ü–µ–Ω–∫–∏ —Å—Ç–∞—Ç—å–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
            return;
        }

        fetch('?handler=RateArticle', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ isLike: isLike })
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert(data.error);
            } else {
                document.getElementById('likeCount').textContent = data.likeCount;
                document.getElementById('dislikeCount').textContent = data.dislikeCount;
            }
        })
        .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
    }
    </script>
}